{"version":3,"file":"static/js/415.9cadb6e6.chunk.js","mappings":"uMAEaA,EAAaC,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uKAWtBC,EAAYH,EAAAA,QAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gY,0BCclC,EAtBkB,SAAHG,GAA8B,IAAxBC,EAAMD,EAANC,OAAQC,EAAQF,EAARE,SAC3B,OACEC,EAAAA,EAAAA,KAACT,EAAU,CAAAU,SACRH,EAAOI,KAAI,SAAAC,GAAK,OACfH,EAAAA,EAAAA,KAACL,EAAS,CAAAM,UACRG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,MAAO,CAAEC,KAAMR,GACfS,GAAE,WAAAC,OAAaN,EAAMO,GAAGC,YAAaV,SAAA,EAErCD,EAAAA,EAAAA,KAAA,OACEY,IAAKT,EAAMU,OAASV,EAAMU,OAASC,EACnCC,IAAG,GAAAN,OAAKN,EAAMa,MAAK,WACnBC,MAAO,OAETjB,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAMa,YAVEb,EAAMO,GAYV,KAIpB,C,gGCHA,UAhBa,WACX,IAAAQ,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCpB,EAAMsB,EAAA,GAAEE,EAASF,EAAA,IACxBG,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAiBC,MAAK,SAAAC,GAAG,OAAIJ,EAAUI,EAAI,GAC7C,GAAG,IAEH,IAAM3B,GAAW4B,EAAAA,EAAAA,MAEjB,OACEvB,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAA3B,SAAA,EACED,EAAAA,EAAAA,KAAC6B,EAAAA,GAAK,CAAA5B,SAAC,mBACPD,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CAAChC,OAAQA,EAAQC,SAAUA,MAG3C,C,8LClBAgC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAa,mCACbC,EAAe,iCAERT,EAAc,eAAA3B,GAAAqC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGlBV,EAAAA,EAAAA,IAAU,qBAAsB,CACxCW,OAAQ,CACNC,QAASX,KAEV,KAAD,EALe,OAKfK,EAAAE,EAAAK,KALQN,EAAOD,EAAfQ,KAAQP,QAAOC,EAAAO,OAAA,SAMVC,EAAkBT,IAAQ,wBAAAC,EAAAS,OAAA,GAAAZ,EAAA,KAClC,kBAT0B,OAAAvC,EAAAoD,MAAA,KAAAC,UAAA,KAWdC,EAAc,eAAAC,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,EAAM3C,GAAE,IAAA4C,EAAAT,EAAA7B,EAAAuC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvB,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACbV,EAAAA,EAAAA,IAAU,UAADtB,OAAWC,GAAM,CAC/CgC,OAAQ,CACNC,QAASX,KAEV,KAAD,EACwD,OADxDsB,EAAAK,EAAAf,KAJMC,EAAIS,EAAJT,KAKA7B,EAAuD6B,EAAvD7B,MAAOuC,EAAgDV,EAAhDU,SAAUC,EAAsCX,EAAtCW,YAAaC,EAAyBZ,EAAzBY,aAAcC,EAAWb,EAAXa,OAAMC,EAAAb,OAAA,SAEnD,CACL9B,MAAAA,EACAuC,SAAAA,EACA1C,OAAQ2C,EAAcvB,EAAeuB,EAAc,KACnDI,MAAOC,KAAKC,MAAqB,GAAfL,GAClBC,OAAAA,IACD,wBAAAC,EAAAX,OAAA,GAAAK,EAAA,KACF,gBAf0BU,GAAA,OAAAX,EAAAH,MAAA,KAAAC,UAAA,KAiBpB,SAAec,EAAYC,GAAA,OAAAC,EAAAjB,MAAC,KAADC,UAAA,CAQjC,SAAAgB,IAAA,OAAAA,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MARM,SAAAgC,EAA4BzD,GAAE,IAAA0D,EAAAvB,EAAA,OAAAV,IAAAA,MAAA,SAAAkC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACZV,EAAAA,EAAAA,IAAU,SAADtB,OAAUC,EAAE,YAAY,CACtDgC,OAAQ,CACNC,QAASX,KAEV,KAAD,EAJU,OAIVoC,EAAAC,EAAAzB,KAJMC,EAAIuB,EAAJvB,KAAIwB,EAAAvB,OAAA,SAMD,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMP,SAAO,wBAAA+B,EAAArB,OAAA,GAAAmB,EAAA,MACrBlB,MAAA,KAAAC,UAAA,CAEM,IAAMoB,EAAS,eAAAC,GAAArC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqC,EAAM9D,GAAE,IAAA+D,EAAA5B,EAAA,OAAAV,IAAAA,MAAA,SAAAuC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EACRV,EAAAA,EAAAA,IAAU,SAADtB,OAAUC,EAAE,YAAY,CACtDgC,OAAQ,CACNC,QAASX,KAEV,KAAD,EAJU,OAIVyC,EAAAC,EAAA9B,KAJMC,EAAI4B,EAAJ5B,KAAI6B,EAAA5B,OAAA,SAKD,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,KAAKzE,KAAI,SAAA0E,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAa,MAAQ,CAChErE,GADwDkE,EAAFlE,GAEtDsE,MAAOH,EAAe5C,EAAe4C,EAAe,KACpDC,KAAAA,EACAC,UAAAA,EACD,KAAE,wBAAAL,EAAA1B,OAAA,GAAAwB,EAAA,KACJ,gBAZqBS,GAAA,OAAAV,EAAAtB,MAAA,KAAAC,UAAA,KAcTgC,EAAkB,eAAAC,GAAAjD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiD,EAAMC,GAAK,IAAAC,EAAAzC,EAAA,OAAAV,IAAAA,MAAA,SAAAoD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACpBV,EAAAA,EAAAA,IAAU,eAAgB,CAC/CW,OAAQ,CACNC,QAASX,EACTqD,MAAOA,KAER,KAAD,EALU,OAKVC,EAAAC,EAAA3C,KALMC,EAAIyC,EAAJzC,KAAI0C,EAAAzC,OAAA,SAMLC,EAAkBF,EAAKP,UAAQ,wBAAAiD,EAAAvC,OAAA,GAAAoC,EAAA,KACvC,gBAR8BI,GAAA,OAAAL,EAAAlC,MAAA,KAAAC,UAAA,KAU/B,SAASH,EAAkBjD,GAOzB,OANeA,EAAOI,KAAI,SAAAuF,GAAA,IAAG/E,EAAE+E,EAAF/E,GAAIM,EAAKyE,EAALzE,MAAOwC,EAAWiC,EAAXjC,YAAW,MAAQ,CACzD9C,GAAAA,EACAM,MAAAA,EACAH,OAAQ2C,EAAcvB,EAAeuB,EAAc,KACpD,GAGH,C","sources":["components/MovieList/MovieListStyled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  margin: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n  padding: 40px;\n`;\n\nexport const MovieItem = styled.li`\n  width: 250px;\n  min-height: 400px;\n  border: 2px solid #ececec;\n  border-radius: 12px;\n  display: flex;\n  justify-content: center;\n\n  a {\n    max-width: 100%;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: #ececec;\n    text-decoration: none;\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { MovieItem, MoviesList } from './MovieListStyled';\nimport { Link } from 'react-router-dom';\nimport defaultMovieImg from '../../images/video-camera.png';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <MoviesList>\n      {movies.map(movie => (\n        <MovieItem key={movie.id}>\n          <Link\n            state={{ from: location }}\n            to={`/movies/${movie.id.toString()}`}\n          >\n            <img\n              src={movie.poster ? movie.poster : defaultMovieImg}\n              alt={`${movie.title} poster`}\n              width={200}\n            />\n            <p>{movie.title}</p>\n          </Link>\n        </MovieItem>\n      ))}\n    </MoviesList>\n  );\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchPopMovies } from 'services/api';\nimport { Title } from './SharedStyles';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchPopMovies().then(res => setMovies(res));\n  }, []);\n\n  const location = useLocation();\n\n  return (\n    <>\n      <Title>Popular today</Title>\n      <MovieList movies={movies} location={location} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport const fetchPopMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  return extractMoviesData(results);\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n};\n\nexport async function fetchReviews(id) {\n  const { data } = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return data?.results;\n}\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  return data?.cast.map(({ profile_path, name, character, id }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n  }));\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n  return extractMoviesData(data.results);\n};\n\nfunction extractMoviesData(movies) {\n  const result = movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n  // console.log(result);\n  return result;\n}\n"],"names":["MoviesList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","_ref","movies","location","_jsx","children","map","movie","_jsxs","Link","state","from","to","concat","id","toString","src","poster","defaultMovieImg","alt","title","width","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","fetchPopMovies","then","res","useLocation","_Fragment","Title","MovieList","axios","ACCESS_KEY","IMG_BASE_URL","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","results","_context","prev","next","params","api_key","sent","data","abrupt","extractMoviesData","stop","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","overview","poster_path","vote_average","genres","_context2","score","Math","floor","_x","fetchReviews","_x2","_fetchReviews","_callee5","_yield$axios$get5","_context5","fetchCast","_ref3","_callee3","_yield$axios$get3","_context3","cast","_ref4","profile_path","name","character","photo","_x3","fetchMoviesByQuery","_ref5","_callee4","query","_yield$axios$get4","_context4","_x4","_ref6"],"sourceRoot":""}