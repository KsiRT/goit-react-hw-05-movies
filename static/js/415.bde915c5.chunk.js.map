{"version":3,"file":"static/js/415.bde915c5.chunk.js","mappings":"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","sources":["pages/Home.jsx","services/api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchPopMovies } from 'services/api';\nimport { MovieItem, MoviesList, Title } from './SharedStyles';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchPopMovies().then(res => setMovies(res));\n  }, []);\n\n  const location = useLocation();\n\n  return (\n    <>\n      <Title>Popular today</Title>\n      <MoviesList>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <Link\n              state={{ from: location }}\n              to={`movies/${movie.id.toString()}`}\n            >\n              <img\n                src={movie.poster}\n                alt={`${movie.title} poster`}\n                width={200}\n              />\n              <p>{movie.title}</p>\n            </Link>\n          </MovieItem>\n        ))}\n      </MoviesList>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport const fetchPopMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  return extractMoviesData(results);\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n};\n\nexport async function fetchReviews(id) {\n  const { data } = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return data?.results;\n}\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  return data?.cast.map(({ profile_path, name, character, id }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n  }));\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n  return extractMoviesData(data.results);\n};\n\nfunction extractMoviesData(movies) {\n  const result = movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n  // console.log(result);\n  return result;\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","useEffect","fetchPopMovies","then","res","location","useLocation","_jsxs","_Fragment","children","_jsx","Title","MoviesList","map","movie","MovieItem","Link","state","from","to","concat","id","toString","src","poster","alt","title","width","axios","ACCESS_KEY","IMG_BASE_URL","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","results","_context","prev","next","params","api_key","sent","data","abrupt","extractMoviesData","stop","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","overview","poster_path","vote_average","genres","_context2","score","Math","floor","_x","fetchReviews","_x2","_fetchReviews","_callee5","_yield$axios$get5","_context5","fetchCast","_ref3","_callee3","_yield$axios$get3","_context3","cast","_ref4","profile_path","name","character","photo","_x3","fetchMoviesByQuery","_ref5","_callee4","query","_yield$axios$get4","_context4","_x4","_ref6"],"sourceRoot":""}