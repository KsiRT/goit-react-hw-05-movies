{"version":3,"file":"static/js/46.cad175bf.chunk.js","mappings":"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","sources":["components/Reviews/ReviewsStyled.jsx","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  color: #ececec;\n  font-size: 18px;\n`;\n\nexport const Review = styled.li``;\n\nexport const NoReviews = styled.p`\n  font-size: 25px;\n  color: #ececec;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\nimport { NoReviews, Review, ReviewsList } from './ReviewsStyled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetchReviews(movieId).then(res => {\n      setReviews(res);\n    });\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length ? (\n        <ReviewsList>\n          {reviews.map(rev => (\n            <Review key={rev.id}>\n              <p>{rev.author}</p>\n              <span>{rev.content}</span>\n              <hr />\n            </Review>\n          ))}\n        </ReviewsList>\n      ) : (\n        <NoReviews>There is no reviews on this movie yet</NoReviews>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst ACCESS_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\nexport const fetchPopMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get('trending/movie/day', {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  return extractMoviesData(results);\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  const { title, overview, poster_path, vote_average, genres } = data;\n\n  return {\n    title,\n    overview,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n    score: Math.floor(vote_average * 10),\n    genres,\n  };\n};\n\nexport async function fetchReviews(id) {\n  const { data } = await axios.get(`movie/${id}/reviews`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n\n  return data?.results;\n}\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, {\n    params: {\n      api_key: ACCESS_KEY,\n    },\n  });\n  return data?.cast.map(({ profile_path, name, character, id }) => ({\n    id,\n    photo: profile_path ? IMG_BASE_URL + profile_path : null,\n    name,\n    character,\n  }));\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      api_key: ACCESS_KEY,\n      query: query,\n    },\n  });\n  return extractMoviesData(data.results);\n};\n\nfunction extractMoviesData(movies) {\n  const result = movies.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster: poster_path ? IMG_BASE_URL + poster_path : null,\n  }));\n  // console.log(result);\n  return result;\n}\n"],"names":["ReviewsList","styled","_templateObject","_taggedTemplateLiteral","Review","_templateObject2","NoReviews","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchReviews","then","res","_jsx","_Fragment","children","length","map","rev","_jsxs","author","content","id","axios","ACCESS_KEY","IMG_BASE_URL","fetchPopMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","results","_context","prev","next","params","api_key","sent","data","abrupt","extractMoviesData","stop","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","title","overview","poster_path","vote_average","genres","_context2","concat","poster","score","Math","floor","_x","_x2","_fetchReviews","_callee5","_yield$axios$get5","_context5","fetchCast","_ref3","_callee3","_yield$axios$get3","_context3","cast","_ref4","profile_path","name","character","photo","_x3","fetchMoviesByQuery","_ref5","_callee4","query","_yield$axios$get4","_context4","_x4","movies","_ref6"],"sourceRoot":""}